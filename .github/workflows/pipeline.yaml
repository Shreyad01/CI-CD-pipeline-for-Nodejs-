name: CI/CD Pipeline
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
  build-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: shreyad01
          password: dckr_pat_ercprqblbWzTxe4voWorbDWLq9o
      - name: Build and push Docker image
        run: |
          docker build -t shreyad01/my-nodejs-app:latest .
          docker push shreyad01/my-nodejs-app:latest
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.31.3'
      - name: Deploy to Kubernetes
        env:
          KUBE_CONFIG_DATA:  ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          TEMP_KUBECONFIG=$(mktemp)
          echo "${KUBE_CONFIG_DATA}" | base64 -d > $TEMP_KUBECONFIG
          chmod 600 $TEMP_KUBECONFIG
          kubectl --kubeconfig=$TEMP_KUBECONFIG apply -f k8s/

      - name: Notify on Success

         if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment Success: Repository: ${{ github.repository }}, Commit: ${{ github.sha }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on Failure

        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment Failure: Repository: ${{ github.repository }}, Commit: ${{ github.sha }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}